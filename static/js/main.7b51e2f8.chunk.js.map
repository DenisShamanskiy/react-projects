{"version":3,"sources":["components/Generator/Generaror.module.css","components/Generator/Generaror.js","components/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Generaror","options","name","value","useState","password","setPassword","lengthPassword","setLengthPassword","Array","length","fill","checkedOptions","setCheckedOptions","strOptions","setStrOptions","disable","setdisable","unique","setuUnique","message","setMessage","generation","string","passwordGeneration","counter","item","charAt","Math","floor","random","includes","push","console","log","join","msg","test2","i","test","useEffect","every","option","className","styles","container","title","id","button_copy","disabled","onClick","navigator","clipboard","writeText","copyPassword","slider","type","min","max","onChange","event","target","input_label","htmlFor","input_label_span","input_unique","input_unique_label","input_unique_span","options_list","map","index","options_list_item","checkbox","checked","position","updatedCheckedOptions","updatedStrOptions","reduce","sum","currentState","handleCheckbox","checkbox_label","button_create","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b51e2f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Generaror_container__3tjrz\",\"title\":\"Generaror_title__guj42\",\"password\":\"Generaror_password__j5d2p\",\"message\":\"Generaror_message__1EdQy\",\"button_create\":\"Generaror_button_create__3a6jB\",\"button_copy\":\"Generaror_button_copy__1yFdB\",\"slider\":\"Generaror_slider__96T9e\",\"input_label\":\"Generaror_input_label__xoSb6\",\"input_label_span\":\"Generaror_input_label_span__1rHGe\",\"options_list\":\"Generaror_options_list__1e4OZ\",\"options_list_item\":\"Generaror_options_list_item__3fbnX\",\"checkbox\":\"Generaror_checkbox__1i-Qm\",\"checkbox_label\":\"Generaror_checkbox_label__2Xa4V\",\"input_unique\":\"Generaror_input_unique__pBMOt\",\"switch__1\":\"Generaror_switch__1__2zo_F\",\"input_unique_label\":\"Generaror_input_unique_label__52UwW\",\"input_unique_span\":\"Generaror_input_unique_span__3vcZ4\"};","import { useState, useEffect } from \"react\";\nimport styles from \"./Generaror.module.css\";\n\nfunction Generaror() {\n  const options = [\n    {\n      name: \"Нижний регистр\",\n      value: \"abcdefghijklmnopqrstuvwxyz\",\n    },\n    {\n      name: \"Верний регистр\",\n      value: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    },\n    {\n      name: \"Цифры\",\n      value: \"0123456789\",\n    },\n    {\n      name: \"Символы\",\n      value: \"!@#$%^&*()\",\n    },\n  ];\n  /* Результат генерации */\n  const [password, setPassword] = useState(\"\");\n  /* Длина пароля */\n  const [lengthPassword, setLengthPassword] = useState(8);\n  /* Выбранные опции */\n  const [checkedOptions, setCheckedOptions] = useState(\n    new Array(options.length).fill(false)\n  );\n  /* Строка с выбранными опциями для генератора */\n  const [strOptions, setStrOptions] = useState(\"\");\n  /* Проверка опций / Активация кнопки генерации */\n  const [disable, setdisable] = useState(true);\n  /* Уникальные значения */\n  const [unique, setuUnique] = useState(false);\n\n  const [message, setMessage] = useState(\"\");\n\n  /* Обрабочик Checkbox */\n  const handleCheckbox = (position) => {\n    const updatedCheckedOptions = checkedOptions.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedOptions(updatedCheckedOptions);\n\n    const updatedStrOptions = updatedCheckedOptions.reduce(\n      (sum, currentState, index) => {\n        if (currentState === true) {\n          return sum + options[index].value;\n        }\n        return sum;\n      },\n      \"\"\n    );\n    setStrOptions(updatedStrOptions);\n  };\n\n  /* Обрабочик длины пароля */\n  function handleLengthPassword(event) {\n    setLengthPassword(event.target.value);\n  }\n  /* Обрабочик уникальных символов */\n  function handleUnique() {\n    setuUnique(!unique);\n  }\n\n  /*function generation(string) {\n    let passwordGeneration = \"\";\n    let uni = true;\n    console.log(uni);\n    for (var i = 0; i < lengthPassword; ++i) {\n      passwordGeneration += string.charAt(\n        Math.floor(Math.random() * string.length)\n      );\n    }\n    setPassword(passwordGeneration);\n  }\n\n  function randoNumbers(string) {\n    const randomNumbers = [];\n    for (let counter = 0; counter < lengthPassword; counter++) {\n      let num;\n      do {\n        num = string.charAt(Math.floor(Math.random() * string.length));\n      } while (randomNumbers.includes(num));\n      randomNumbers.push(num);\n    }\n    setPassword(randomNumbers.join(\"\"));\n  }*/\n\n  /* Функция генерации пароля */\n  const generation = (string) => (unique ? test2(string) : test(string));\n\n  function test(string) {\n    let passwordGeneration = [];\n    for (var i = 0; i < lengthPassword; ++i) {\n      passwordGeneration += string.charAt(\n        Math.floor(Math.random() * string.length)\n      );\n    }\n    setPassword(passwordGeneration);\n  }\n\n  function test2(string) {\n    let passwordGeneration = [];\n    for (\n      let counter = 0;\n      counter <\n      (lengthPassword < string.length ? lengthPassword : string.length);\n      counter++\n    ) {\n      let item;\n      do {\n        item = string.charAt(Math.floor(Math.random() * string.length));\n      } while (passwordGeneration.includes(item));\n      passwordGeneration.push(item);\n      console.log(passwordGeneration);\n    }\n    setPassword(passwordGeneration.join(\"\"));\n    msg(string);\n  }\n\n  /*for (var i = 0; i < lengthPassword; ++i) {\n      if (!unique) {\n        inputLenght.max = string.length;\n        passwordGeneration += string.charAt(\n          Math.floor(Math.random() * string.length)\n        );\n        setPassword(passwordGeneration);\n      } else {\n        let item;\n        do {\n          item = string.charAt(Math.floor(Math.random() * string.length));\n        } while (passwordGeneration.includes(item));\n        passwordGeneration.push(item);\n        setPassword(passwordGeneration.join(\"\"));\n      }\n    }*/\n\n  /* Функция копирования пароля в буфер обмена */\n  function copyPassword(password) {\n    navigator.clipboard.writeText(password);\n  }\n\n  function msg(string) {\n    lengthPassword > string.length\n      ? setMessage(`Сделать длиннее ${string.length} символов не получится`)\n      : setMessage(\"\");\n  }\n\n  useEffect(() => {\n    setdisable(checkedOptions.every((option) => option === false));\n    setMessage(\"\");\n  }, [checkedOptions, lengthPassword]);\n\n  return (\n    <article className={styles.container}>\n      <h1 className={styles.title}>Генератор паролей</h1>\n      <p className={styles.password} id=\"password\">\n        {password}{\" \"}\n      </p>\n      <span className={styles.message}>{message}</span>\n\n      <button\n        className={styles.button_copy}\n        title=\"Copy\"\n        disabled={!password}\n        onClick={() => copyPassword(password)}\n      >\n        Копировать\n      </button>\n\n      <div className={styles.slider}>\n        <input\n          type=\"range\"\n          id=\"length\"\n          name=\"length\"\n          min=\"1\"\n          max=\"50\"\n          value={lengthPassword}\n          onChange={handleLengthPassword}\n        ></input>\n        <label className={styles.input_label} htmlFor=\"length\">\n          Длина пароля&nbsp;\n          <span className={styles.input_label_span}>{lengthPassword}</span>\n        </label>\n      </div>\n\n      <div className={styles.input_unique}>\n        <input\n          type=\"checkbox\"\n          id=\"unique\"\n          name=\"unique\"\n          value={unique}\n          onChange={handleUnique}\n        ></input>\n        <label className={styles.input_unique_label} htmlFor=\"unique\"></label>\n        <span className={styles.input_unique_span}>Символы не повторяются</span>\n      </div>\n\n      <ul className={styles.options_list}>\n        {options.map(({ name, value }, index) => {\n          return (\n            <li key={index}>\n              <div className={styles.options_list_item}>\n                <input\n                  className={styles.checkbox}\n                  type=\"checkbox\"\n                  id={`custom-checkbox-${index}`}\n                  name={name}\n                  value={name}\n                  checked={checkedOptions[index]}\n                  onChange={() => handleCheckbox(index)}\n                />\n                <label\n                  className={styles.checkbox_label}\n                  htmlFor={`custom-checkbox-${index}`}\n                >\n                  {name}\n                </label>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n\n      <button\n        className={styles.button_create}\n        title=\"Generate\"\n        disabled={disable}\n        onClick={() => generation(strOptions)}\n      >\n        Создать\n      </button>\n    </article>\n  );\n}\n\nexport default Generaror;\n","import \"./App.css\";\nimport Generaror from \"./Generator/Generaror\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Generaror />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}